import plugin from 'tailwindcss/plugin';
import defaultTheme from 'tailwindcss/defaultTheme';

function isFunction(input) {
  return typeof input === "function";
}
function replaceRemWithPx(input, baseFontSize = 16) {
  if (input == null)
    return input;
  if (typeof input === "string") {
    return input.replace(
      /(\d*\.?\d+)rem$/,
      (_, val) => `${parseFloat(val) * baseFontSize}px`
    );
  }
  if (Array.isArray(input))
    return input.map((val) => replaceRemWithPx(val, baseFontSize));
  if (typeof input === "object") {
    const ret = {};
    for (const key in input)
      ret[key] = replaceRemWithPx(input[key], baseFontSize);
    return ret;
  }
  if (isFunction(input)) {
    return function(...args) {
      const replacedArgs = args.map((arg) => {
        if (typeof arg === "string") {
          return arg.replace(
            /(\d*\.?\d+)rem/g,
            (_, val) => `${parseFloat(val) * baseFontSize}px`
          );
        }
        return arg;
      });
      return input(...replacedArgs);
    };
  }
  return input;
}

const index = plugin.withOptions(
  // @ts-expect-error
  () => {
  },
  ({ baseFontSize = 16 } = {}) => ({
    theme: replaceRemWithPx(defaultTheme, baseFontSize)
  })
);

export { index as default };
